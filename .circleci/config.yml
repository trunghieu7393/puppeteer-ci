version: 2.1
jobs:
  build: # runs not using Workflows must have a `build` job as entry point
      working_directory: ~/app # directory where steps will run
      docker: # run the steps with Docker
        - image: node:13-slim # cai nay giong trong dockerfile
      steps: # a collection of executable commands
        - checkout # special step to check out source code to working directory
        - run:
            name: setup
            command: |
              apt-get update && apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget net-tools
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
        - run:
            name: install pm2
            command: 'npm install pm2 -g'
        - run:
            name: npm install
            command: 'npm install'
        - save_cache:
            paths:
              - node_modules
            key: v1-dependencies-{{ checksum "package.json" }}
        - run:
            name: npm start
            command: 'npm run start-script && netstat -ant'
        - run:
            name: start express
            command: 'node ./e2e/start-express.js'
            background: true
        - run:
            name: storing local IP address
            command: 'node -p "require(\'ip\').address()" > logs/ip.log'
        - run:
            name: waiting for node server to start
            command: 'wget --retry-connrefused --waitretry=2 -t 5 "http://$(cat logs/ip.log):3333" > /dev/null'
        - run:
            name: show port
            command: 'netstat -ant'
        - run:
            name: show pm2
            command: 'pm2 list'
        - run:
            name: npm test
            command: 'FILE=smile npm run test'

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters: # using regex filters requires the entire branch to match
            branches:
              only: # only branches matching the below regex filters will run
                - master
                - /feature\/.*/
